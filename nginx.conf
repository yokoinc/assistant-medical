events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # Upload limits for medical files
    client_max_body_size 50M;
    client_body_timeout 120s;
    
    # Rate limiting pour la sécurité
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    
    upstream webapp {
        server webapp:3000;
        keepalive 32;
    }
    
    server {
        listen 80;
        server_name webmed.yokoinc.ovh _;
        
        # Security headers améliorés
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
        
        
        # Main application
        location / {
            proxy_pass http://webapp;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
        }
        
        # Rate limiting pour les connexions
        location ~ ^/(login|api/auth) {
            limit_req zone=login burst=3 nodelay;
            proxy_pass http://webapp;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # API avec rate limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://webapp;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Static files (uploads) - access restricted
        location /uploads/ {
            internal;
            alias /var/www/uploads/;
            
            # Headers sécurisés pour fichiers médicaux
            add_header X-Content-Type-Options nosniff;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
        
        # Cache pour les assets statiques
        location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://webapp;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
        }
        
        # Health check amélioré
        location /health {
            access_log off;
            proxy_pass http://webapp/api/health;
            proxy_set_header Host $host;
        }
        
        # Bloquer les fichiers sensibles
        location ~ /\.(env|git) {
            deny all;
            return 404;
        }
        
        location ~ \.(json|yml|yaml|conf)$ {
            deny all;
            return 404;
        }
        
        # Page d'erreur personnalisée
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
    }
}