-- ===== ASSISTANT MÉDICAL - EXEMPLE INIT.SQL =====
-- Copiez ce fichier vers init.sql et modifiez les valeurs

-- Création de la base de données complète pour l'assistant médical
-- Version exemple avec données anonymisées

-- ===== CRÉATION DES TABLES =====

-- Table des utilisateurs administrateurs (médecins)
CREATE TABLE IF NOT EXISTS admins (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    nom VARCHAR(100) NOT NULL,
    prenom VARCHAR(100) NOT NULL,
    specialite VARCHAR(100),
    email VARCHAR(255),
    actif BOOLEAN DEFAULT true,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_login TIMESTAMP
);

-- Table des patients autorisés
CREATE TABLE IF NOT EXISTS patients (
    id SERIAL PRIMARY KEY,
    nom VARCHAR(100) NOT NULL,
    prenom VARCHAR(100) NOT NULL,
    date_naissance DATE NOT NULL,
    telephone VARCHAR(20),
    email VARCHAR(255),
    actif BOOLEAN DEFAULT true,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    -- Index pour l'authentification rapide
    UNIQUE(nom, prenom, date_naissance)
);

-- Table des sessions/consultations
CREATE TABLE IF NOT EXISTS consultations (
    id SERIAL PRIMARY KEY,
    patient_id INTEGER REFERENCES patients(id),
    session_token VARCHAR(255) UNIQUE,
    conversation_history JSONB DEFAULT '[]',
    fichiers_uploades TEXT[],
    statut VARCHAR(50) DEFAULT 'active',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    expires_at TIMESTAMP DEFAULT (CURRENT_TIMESTAMP + INTERVAL '24 hours')
);

-- Table des messages privés pour le médecin
CREATE TABLE IF NOT EXISTS messages_prives (
    id SERIAL PRIMARY KEY,
    patient_id INTEGER REFERENCES patients(id),
    consultation_id INTEGER REFERENCES consultations(id),
    sujet VARCHAR(200) NOT NULL,
    message TEXT NOT NULL,
    niveau_urgence VARCHAR(20) DEFAULT 'normale',
    fichiers_joints TEXT[],
    lu_par_docteur BOOLEAN DEFAULT false,
    reponse_docteur TEXT,
    date_reponse TIMESTAMP,
    archived BOOLEAN DEFAULT false,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Table des fichiers uploadés
CREATE TABLE IF NOT EXISTS fichiers (
    id SERIAL PRIMARY KEY,
    consultation_id INTEGER REFERENCES consultations(id),
    nom_original VARCHAR(255) NOT NULL,
    nom_stockage VARCHAR(255) NOT NULL,
    type_mime VARCHAR(100),
    taille_bytes INTEGER,
    uploaded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Table des numéros d'urgence et de garde
CREATE TABLE IF NOT EXISTS urgences (
    id SERIAL PRIMARY KEY,
    type VARCHAR(50) NOT NULL,
    nom VARCHAR(255) NOT NULL,
    telephone VARCHAR(20),
    adresse TEXT,
    site_web VARCHAR(255),
    horaires TEXT,
    actif BOOLEAN DEFAULT true
);

-- Table des sessions admin (optionnel, pour un suivi avancé)
CREATE TABLE IF NOT EXISTS admin_sessions (
    id SERIAL PRIMARY KEY,
    admin_id INTEGER REFERENCES admins(id),
    session_token VARCHAR(255) UNIQUE,
    ip_address INET,
    user_agent TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    expires_at TIMESTAMP DEFAULT (CURRENT_TIMESTAMP + INTERVAL '8 hours'),
    actif BOOLEAN DEFAULT true
);

-- Table de suivi des utilisations du chat IA (pour limiter l'usage)
CREATE TABLE IF NOT EXISTS chat_usage (
    id SERIAL PRIMARY KEY,
    patient_id INTEGER REFERENCES patients(id),
    consultation_id INTEGER REFERENCES consultations(id),
    message_count INTEGER DEFAULT 1,
    usage_date DATE DEFAULT CURRENT_DATE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    -- Index unique pour éviter les doublons par patient/jour
    UNIQUE(patient_id, usage_date)
);

-- ===== INSERTION DES DONNÉES =====

-- Insertion des numéros d'urgence (à adapter selon votre région)
INSERT INTO urgences (type, nom, telephone, adresse, site_web, horaires) VALUES
('urgence', 'SAMU', '15', 'Service d''Aide Médicale Urgente', null, '24h/24'),
('urgence', 'Pompiers', '18', 'Service de secours', null, '24h/24'),
('urgence', 'Police/Gendarmerie', '17', 'Forces de l''ordre', null, '24h/24'),
('urgence', 'Numéro d''urgence européen', '112', 'Urgences européennes', null, '24h/24'),
('urgence', 'CHU - Urgences', '02 XX XX XX XX', 'Adresse de votre hôpital', 'https://www.votre-hopital.fr', '24h/24'),
('garde', 'Médecins de garde', '02 XX XX XX XX', 'Service de permanence des soins', 'https://www.ordre.medecin.fr', 'Week-end et jours fériés'),
('pharmacie', 'Pharmacie de garde', '3237', 'Numéro pour connaître la pharmacie de garde', null, '24h/24')
ON CONFLICT DO NOTHING;

-- ===== CRÉATION DE L'ADMIN PAR DÉFAUT =====
-- L'admin sera créé automatiquement par Node.js depuis les variables du .env
-- Configurez ADMIN_USERNAME et ADMIN_PASSWORD dans votre fichier .env

-- ===== INSERTION DES PATIENTS DE TEST =====
-- Supprimez ou modifiez ces données en production
INSERT INTO patients (nom, prenom, date_naissance, telephone, email, actif) VALUES
('TEST', 'Patient', '1990-01-01', '06 12 34 56 78', 'test@example.com', true),
('EXEMPLE', 'Marie', '1985-05-15', '06 11 22 33 44', 'marie.exemple@email.com', true),
('DEMO', 'Pierre', '1975-09-22', '06 55 66 77 88', 'pierre.demo@email.com', true)
ON CONFLICT (nom, prenom, date_naissance) DO NOTHING;

-- ===== CRÉATION DES INDEX =====

CREATE INDEX IF NOT EXISTS idx_patients_auth ON patients(nom, prenom, date_naissance);
CREATE INDEX IF NOT EXISTS idx_consultations_token ON consultations(session_token);
CREATE INDEX IF NOT EXISTS idx_consultations_patient ON consultations(patient_id);
CREATE INDEX IF NOT EXISTS idx_fichiers_consultation ON fichiers(consultation_id);
CREATE INDEX IF NOT EXISTS idx_messages_patient ON messages_prives(patient_id);
CREATE INDEX IF NOT EXISTS idx_messages_urgence ON messages_prives(niveau_urgence, created_at);
CREATE INDEX IF NOT EXISTS idx_messages_non_lus ON messages_prives(lu_par_docteur, created_at);
CREATE INDEX IF NOT EXISTS idx_admins_username ON admins(username);
CREATE INDEX IF NOT EXISTS idx_admin_sessions_token ON admin_sessions(session_token);
CREATE INDEX IF NOT EXISTS idx_admin_sessions_expires ON admin_sessions(expires_at);
CREATE INDEX IF NOT EXISTS idx_chat_usage_patient_date ON chat_usage(patient_id, usage_date);
CREATE INDEX IF NOT EXISTS idx_chat_usage_date ON chat_usage(usage_date);

-- ===== NOTES IMPORTANTES =====
-- 1. Modifiez les identifiants admin par défaut
-- 2. Adaptez les numéros d'urgence à votre région
-- 3. Supprimez les patients de test en production
-- 4. Les mots de passe seront hashés automatiquement par l'application